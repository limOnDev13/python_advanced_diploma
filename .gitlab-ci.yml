workflow:
    rules:
        - if: $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"
        - if: $CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"

image: python:3.12

stages:
    - test
    - deploy

pytest:
    stage: test
    before_script:
        - python -V
        - pip install virtualenv
        - virtualenv .venv
        - source .venv/bin/activate
        - pip install -r requirements_tests.txt
    services:
        - postgres:latest
    variables:
        POSTGRES_USER: test_user
        POSTGRES_PASSWORD: test_pwd
        POSTGRES_HOST: postgres
    script:
        - export PYTHONPATH=$PYTHONPATH:/src
        - python3 -m pytest tests
    tags:
        - students

black:
    stage: test
    before_script:
        - python -V
        - pip install virtualenv
        - virtualenv .venv
        - source .venv/bin/activate
        - pip install -r requirements_tests.txt
    script:
        - python3 -m black --diff --check src
        - python3 -m black --diff --check tests
    tags:
        - students

isort:
    stage: test
    before_script:
        - python -V
        - pip install virtualenv
        - virtualenv .venv
        - source .venv/bin/activate
        - pip install -r requirements_tests.txt
    script:
        - python3 -m isort --check-only --diff --profile black src
        - python3 -m isort --check-only --diff --profile black tests
    tags:
        - students

flake8:
    before_script:
        - python -V
        - pip install virtualenv
        - virtualenv .venv
        - source .venv/bin/activate
        - pip install -r requirements_tests.txt
    stage: test
    script:
        - python3 -m flake8 src
        - python3 -m flake8 tests
    tags:
        - students

mypy:
    before_script:
        - python -V
        - pip install virtualenv
        - virtualenv .venv
        - source .venv/bin/activate
        - pip install -r requirements_tests.txt
    stage: test
    script:
        - python3 -m mypy src
        - python3 -m mypy tests
    tags:
        - students

deploy_to_prod:
    stage: deploy
    before_script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
        - ssh -v $DEPLOY_USER@$DEPLOY_HOST "cd '$DEPLOY_PATH'; docker compose down; pip install -r requirements.txt; git pull; docker compose up"
    tags:
        - students
    only:
        - master