services:
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    ports:
      - "8080:80"
    depends_on:
      server:
        condition: service_started
        restart: true
    networks:
      - my_network
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - '5432:5432'
    volumes:
      - ./db/:/var/lib/postgresql/data
    networks:
      - my_network
  server:
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - ENV=${ENV}
      - DB_URL=${DB_URL}
    build:
      context: .
      dockerfile: src/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    ports:
      - "5000:8000"
    networks:
      - my_network

networks:
  my_network:
    driver: bridge